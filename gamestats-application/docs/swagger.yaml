basePath: /api
definitions:
  api.ErrorResponse:
    properties:
      message:
        type: string
      responseCode:
        type: integer
    type: object
  api.MatchDto:
    properties:
      dateEnded:
        type: string
      dateStarted:
        type: string
      id:
        type: string
      matchType:
        $ref: '#/definitions/entities.MatchType'
    type: object
  api.UserDto:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  entities.MatchType:
    enum:
    - 0
    type: integer
    x-enum-comments:
      Normal: iota is 0
    x-enum-varnames:
    - Normal
  internal_handlers.CreateMatchRequest:
    properties:
      matchType:
        $ref: '#/definitions/entities.MatchType'
    type: object
  internal_handlers.CreateUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Your API Description
  termsOfService: http://your-terms-of-service-url.com
  title: Your API Title
  version: "1.0"
paths:
  /matches:
    post:
      consumes:
      - application/json
      parameters:
      - description: Match details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.CreateMatchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Match created successfully
          schema:
            $ref: '#/definitions/api.MatchDto'
        "400":
          description: Invalid request format or parameters
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - basicAuth: []
      summary: Create new match entry
      tags:
      - matches
  /users:
    get:
      consumes:
      - application/json
      description: get details of a user by username
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserDto'
      security:
      - basicAuth: []
      summary: Get user details
      tags:
      - users
    post:
      consumes:
      - application/json
      description: This API endpoint creates a new user with the provided username
        and password.
      parameters:
      - description: User details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User created successfully
          schema:
            $ref: '#/definitions/api.UserDto'
        "400":
          description: Invalid request format or parameters
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a new user
      tags:
      - users
securityDefinitions:
  basicAuth:
    type: basic
swagger: "2.0"
