{
    "swagger": "2.0",
    "info": {
        "description": "Your API Description",
        "title": "Your API Title",
        "termsOfService": "http://your-terms-of-service-url.com",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/matches": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get details of a matches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "Get match details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.MatchDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "Create new match entry",
                "parameters": [
                    {
                        "description": "Match details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreateMatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Match created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.MatchDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get details of a user by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserDto"
                        }
                    }
                }
            },
            "post": {
                "description": "This API endpoint creates a new user with the provided username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.UserDto"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "responseCode": {
                    "type": "integer"
                }
            }
        },
        "api.MatchDto": {
            "type": "object",
            "properties": {
                "dateEnded": {
                    "type": "string"
                },
                "dateStarted": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "matchType": {
                    "$ref": "#/definitions/entities.MatchType"
                }
            }
        },
        "api.UserDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entities.MatchType": {
            "type": "integer",
            "enum": [
                0
            ],
            "x-enum-comments": {
                "Normal": "iota is 0"
            },
            "x-enum-varnames": [
                "Normal"
            ]
        },
        "internal_handlers.CreateMatchRequest": {
            "type": "object",
            "properties": {
                "matchType": {
                    "$ref": "#/definitions/entities.MatchType"
                }
            }
        },
        "internal_handlers.CreateUserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    }
}